输入&输出
================

输入/\输出所包含的指令主要分为四部分：控制管脚的输入输出（按信号类型可分为数字信号和模拟信号）、中断、脉冲长度及ShiftOut。

* 输入输出：数字输入、数字输出、模拟输入、模拟输出、
* 中断控制：定义中断，取消中断
* 脉冲长度
* 移位输出

.. image:: images/02/inout1.png

数字输出
--------------

.. image:: images/02/digitalWrite.png

描述
++++++++++++++

.. note::
	给一个数字引脚写入HIGH或者LOW。

.. Attention::
	数字13号引脚难以作为数字输入使用，因为大部分的控制板上使用了一颗LED与一个电阻连接到他。如果启动了内部的20K上拉电阻，他的电压将在1.7V左右，而不是正常的5V，因为板载LED串联的电阻把他使他降了下来，这意味着他返回的值总是LOW。如果必须使用数字13号引脚的输入模式，需要使用外部上拉下拉电阻。

参数
+++++++++++++++
* 管脚: 引脚编号（如1,5,10，A0，A3）

* 值: 高 或 低

范例
+++++
将13号端口设置为高电平，延迟一秒，然后设置为低电平，再延迟一秒，如此往复。

.. image:: images/02/digitalWrite-example.png

注释
+++++++++
模拟引脚也可以当做数字引脚使用，使用方法是输入端口A0，A1，A2等。

数字输入
--------------

.. image:: images/02/digitalRead.png

描述
++++++++++++++

.. note::
	读取指定引脚的值，HIGH或LOW。

参数
+++++++++++++++
* 管脚: 引脚编号（如1,5,10，A0，A3）

返回
+++++++++
HIGH 或 LOW

范例
+++++
读取数字0号引脚的值。

.. image:: images/02/digitalRead-example.png

注释
+++++++++
.. Attention::
	如果引脚悬空，digitalRead()会返回HIGH或LOW（随机变化）。

.. 模拟输出
.. --------------
.. .. image:: images/02/inout2.png

.. 依据信号是数字信号还是模拟信号以及信号的状态是输入还是输出进行适当的物理连接及代码选择。
.. 例如如果想要点亮一盏LED灯（假设该灯连接管脚13），使用数字输出语句将管脚13的电平调为高即可。

.. .. image:: images/02/inout3.png

.. 如果想要使用模拟信号，就需要用到模拟管脚，当学生用模拟输出或模拟输入指令时，单击其下拉箭头，可看到Arduino所支持的模拟输出或模拟输入所支持的管脚口，省去学生记忆的时间。

.. .. image:: images/02/inout4.png

.. .. image:: images/02/inout5.png

.. 中断指令
.. ----------------
.. .. image:: images/02/inout6.png

.. 由于程序往往是顺序执行，但有时可能要突然打断正在执行的指令而转而去执行更加重要的指令，因此，中断的使用就显得尤为重要了。
.. 以下是一个最典型的中断指令应用的案例，即按一下开关按键LED点亮三秒，三秒后自动熄灭，但如果在灯亮三秒内监测到开关按键再次按下，则LED立即熄灭。

.. .. image:: images/02/inout7.png

.. .. image:: images/02/inout8.png

.. Mixly的中断模式有三种可以选择：上升、下降及改变。
.. 上升指的是按键的电平由低到高（实际上就是按键按下的过程）；
.. 下降指的是按键的电平由高到低（实际上就是按键抬起的过程）；
.. 改变指的是按键的电平由低到高或由高到低的过程（实际上就是按键按下或抬起的过程）。
.. 当学生使用中断上升模式时，只要按下按键则立即执行中断语句内的指令，当执行完中断内指令后，代码将继续执行之前被打断的相应指令。

.. 脉冲长度
.. -------------------

.. .. image:: images/02/inout9.png

.. ShiftOut
.. -----------------

.. .. image:: images/02/inout10.png